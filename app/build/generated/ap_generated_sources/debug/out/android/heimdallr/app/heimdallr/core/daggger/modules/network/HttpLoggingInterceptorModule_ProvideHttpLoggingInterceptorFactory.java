// Generated by Dagger (https://dagger.dev).
package android.heimdallr.app.heimdallr.core.daggger.modules.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HttpLoggingInterceptorModule_ProvideHttpLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final HttpLoggingInterceptorModule module;

  public HttpLoggingInterceptorModule_ProvideHttpLoggingInterceptorFactory(
      HttpLoggingInterceptorModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideHttpLoggingInterceptor(module);
  }

  public static HttpLoggingInterceptorModule_ProvideHttpLoggingInterceptorFactory create(
      HttpLoggingInterceptorModule module) {
    return new HttpLoggingInterceptorModule_ProvideHttpLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor provideHttpLoggingInterceptor(
      HttpLoggingInterceptorModule instance) {
    return Preconditions.checkNotNull(instance.provideHttpLoggingInterceptor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
