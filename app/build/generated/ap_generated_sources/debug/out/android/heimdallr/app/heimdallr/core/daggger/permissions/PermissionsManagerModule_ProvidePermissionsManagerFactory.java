// Generated by Dagger (https://google.github.io/dagger).
package android.heimdallr.app.heimdallr.core.daggger.permissions;

import android.app.Activity;
import android.heimdallr.app.heimdallr.core.permissions.PermissionsManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PermissionsManagerModule_ProvidePermissionsManagerFactory
    implements Factory<PermissionsManager> {
  private final PermissionsManagerModule module;

  private final Provider<Activity> activityProvider;

  public PermissionsManagerModule_ProvidePermissionsManagerFactory(
      PermissionsManagerModule module, Provider<Activity> activityProvider) {
    this.module = module;
    this.activityProvider = activityProvider;
  }

  @Override
  public PermissionsManager get() {
    return Preconditions.checkNotNull(
        module.providePermissionsManager(activityProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static PermissionsManagerModule_ProvidePermissionsManagerFactory create(
      PermissionsManagerModule module, Provider<Activity> activityProvider) {
    return new PermissionsManagerModule_ProvidePermissionsManagerFactory(module, activityProvider);
  }

  public static PermissionsManager proxyProvidePermissionsManager(
      PermissionsManagerModule instance, Activity activity) {
    return Preconditions.checkNotNull(
        instance.providePermissionsManager(activity),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
