// Generated by Dagger (https://google.github.io/dagger).
package android.heimdallr.app.heimdallr.core.daggger.modules.viewmodels;

import android.heimdallr.app.heimdallr.core.viewmodels.CoreViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class CoreViewModelModule_ProvideCoreViewModelFactory
    implements Factory<CoreViewModel> {
  private final CoreViewModelModule module;

  public CoreViewModelModule_ProvideCoreViewModelFactory(CoreViewModelModule module) {
    this.module = module;
  }

  @Override
  public CoreViewModel get() {
    return Preconditions.checkNotNull(
        module.provideCoreViewModel(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static CoreViewModelModule_ProvideCoreViewModelFactory create(CoreViewModelModule module) {
    return new CoreViewModelModule_ProvideCoreViewModelFactory(module);
  }

  public static CoreViewModel proxyProvideCoreViewModel(CoreViewModelModule instance) {
    return Preconditions.checkNotNull(
        instance.provideCoreViewModel(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
