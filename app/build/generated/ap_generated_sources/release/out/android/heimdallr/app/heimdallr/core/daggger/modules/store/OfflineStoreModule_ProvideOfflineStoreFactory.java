// Generated by Dagger (https://dagger.dev).
package android.heimdallr.app.heimdallr.core.daggger.modules.store;

import android.heimdallr.app.heimdallr.core.database.OfflineStore;
import android.heimdallr.app.heimdallr.core.database.RoomManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OfflineStoreModule_ProvideOfflineStoreFactory implements Factory<OfflineStore> {
  private final OfflineStoreModule module;

  private final Provider<RoomManager> roomManagerProvider;

  public OfflineStoreModule_ProvideOfflineStoreFactory(OfflineStoreModule module,
      Provider<RoomManager> roomManagerProvider) {
    this.module = module;
    this.roomManagerProvider = roomManagerProvider;
  }

  @Override
  public OfflineStore get() {
    return provideOfflineStore(module, roomManagerProvider.get());
  }

  public static OfflineStoreModule_ProvideOfflineStoreFactory create(OfflineStoreModule module,
      Provider<RoomManager> roomManagerProvider) {
    return new OfflineStoreModule_ProvideOfflineStoreFactory(module, roomManagerProvider);
  }

  public static OfflineStore provideOfflineStore(OfflineStoreModule instance,
      RoomManager roomManager) {
    return Preconditions.checkNotNull(instance.provideOfflineStore(roomManager), "Cannot return null from a non-@Nullable @Provides method");
  }
}
