// Generated by Dagger (https://dagger.dev).
package android.heimdallr.app.heimdallr.core.database;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataStore_Factory implements Factory<DataStore> {
  private final Provider<OfflineStore> offlineStoreProvider;

  private final Provider<OnlineStore> onlineStoreProvider;

  public DataStore_Factory(Provider<OfflineStore> offlineStoreProvider,
      Provider<OnlineStore> onlineStoreProvider) {
    this.offlineStoreProvider = offlineStoreProvider;
    this.onlineStoreProvider = onlineStoreProvider;
  }

  @Override
  public DataStore get() {
    return newInstance(offlineStoreProvider.get(), onlineStoreProvider.get());
  }

  public static DataStore_Factory create(Provider<OfflineStore> offlineStoreProvider,
      Provider<OnlineStore> onlineStoreProvider) {
    return new DataStore_Factory(offlineStoreProvider, onlineStoreProvider);
  }

  public static DataStore newInstance(OfflineStore offlineStore, OnlineStore onlineStore) {
    return new DataStore(offlineStore, onlineStore);
  }
}
