// Generated by Dagger (https://dagger.dev).
package android.heimdallr.app.heimdallr.core.daggger.modules.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_LoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final NetworkModule module;

  public NetworkModule_LoggingInterceptorFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return loggingInterceptor(module);
  }

  public static NetworkModule_LoggingInterceptorFactory create(NetworkModule module) {
    return new NetworkModule_LoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor loggingInterceptor(NetworkModule instance) {
    return Preconditions.checkNotNull(instance.loggingInterceptor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
